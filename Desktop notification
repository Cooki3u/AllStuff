import React, { useEffect, useState } from "react";

// ðŸ”¹ Request Notification Permission
const requestNotificationPermission = async () => {
  if ("Notification" in window) {
    if (Notification.permission === "granted") return true;
    if (Notification.permission !== "denied") {
      const permission = await Notification.requestPermission();
      return permission === "granted";
    }
  }
  return false;
};

// ðŸ”¹ Show Notification + Play Sound
const showNotification = (title: string, body: string) => {
  if (Notification.permission === "granted") {
    new Notification(title, { body, icon: "/notification-icon.png" });

    // Play notification sound
    const audio = new Audio("/notification-sound.mp3");
    audio.play();
  }
};

const App: React.FC = () => {
  const [lastEventId, setLastEventId] = useState<string | null>(null);

  useEffect(() => {
    requestNotificationPermission();

    const fetchEvents = async () => {
      try {
        const response = await fetch("https://your-api.com/events"); // Replace with your API
        const data = await response.json();
        const latestEvent = data?.events?.[0]; // Assuming latest event is first

        if (latestEvent && latestEvent.id !== lastEventId) {
          setLastEventId(latestEvent.id);
          showNotification("New Event", latestEvent.message);
        }
      } catch (error) {
        console.error("Error fetching events:", error);
      }
    };

    // Fetch events every 30 seconds
    const interval = setInterval(fetchEvents, 30000);
    return () => clearInterval(interval);
  }, [lastEventId]);

  return <h1>Event Notifier App</h1>;
};

export default App;
